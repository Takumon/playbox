buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'docker'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-actuator-docs')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.data:spring-data-rest-hal-browser')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.security:spring-security-taglibs')
	compile('org.thymeleaf:thymeleaf-spring4')
	compile('org.springframework.hateoas:spring-hateoas')
	
	
	compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-configuration-processor')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-tomcat')
	
	compile('mysql:mysql-connector-java')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.jayway.jsonpath:json-path')
}


bootRun {
    executable = true
    // コマンドラインからmainメソッドに引数を渡す
    // gradle bootRun -Dargs="arg1 arg2 arg3"のようにスペース区切りで渡す 
    if ( project.hasProperty('args') ) {
        args project.args.split('\\s+')
    }
}


task buildDocker(type: Docker, dependsOn: build) {
  push = false
  applicationName = jar.baseName
  dockerfile = file('src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}
